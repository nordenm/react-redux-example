{"version":3,"sources":["components/List.js","components/Form.js","actions/index.js","actions/action-types.js","components/App.js","reducers/index.js","store/index.js","index.js"],"names":["List","connect","state","articles","map","el","key","id","title","mapDispatchToProps","addArticle","payload","type","resetArticles","ConnectedForm","props","handleChange","event","setState","target","value","handleSubmit","preventDefault","handleReset","this","onSubmit","htmlFor","onChange","onClick","Component","Form","App","initialState","lastId","rootReducer","action","Object","assign","concat","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"wOAiBeA,EAFFC,aAZW,SAAAC,GACpB,MAAO,CAAEC,SAAUD,EAAMC,YAWhBF,EARS,SAAC,GAAD,IAAGE,EAAH,EAAGA,SAAH,OAClB,4BACKA,EAASC,KAAI,SAAAC,GAAE,OACZ,wBAAIC,IAAKD,EAAGE,IAAKF,EAAGE,GAApB,KAA0BF,EAAGG,c,gDCAzC,IAAMC,EAAqB,CACvBC,WCTG,SAAoBC,GACvB,MAAO,CAAEC,KCHc,cDGKD,YDQhBE,cCLT,WACH,MAAO,CAAED,KCNiB,oBFaxBE,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAMVC,aAAe,SAACC,GACZ,EAAKC,SAAL,eAAiBD,EAAME,OAAOZ,GAAKU,EAAME,OAAOC,SARjC,EAWnBC,aAAe,SAACJ,GACZA,EAAMK,iBADgB,IAEdd,EAAU,EAAKN,MAAfM,MACR,EAAKO,MAAML,WAAWF,GACtB,EAAKU,SAAS,CAAEV,MAAO,MAfR,EAkBnBe,YAAc,SAACN,GACXA,EAAMK,iBACN,EAAKP,MAAMF,iBAlBX,EAAKX,MAAQ,CACTM,MAAO,IAHI,E,sEAuBT,IACEA,EAAUgB,KAAKtB,MAAfM,MACR,OACI,0BAAMiB,SAAUD,KAAKH,cACjB,6BACI,2BAAOK,QAAQ,SAAf,SACA,2BACId,KAAK,OACLL,GAAG,QACHa,MAAOZ,EACPmB,SAAUH,KAAKR,gBAGvB,4BAAQJ,KAAK,UAAb,eAVJ,OAWI,4BAAQA,KAAK,SAASgB,QAASJ,KAAKD,aAApC,uB,GAtCYM,aA8CbC,EAFF7B,YAAQ,KAAMQ,EAAdR,CAAkCa,GG9ChCiB,EARH,kBACR,6BACI,wCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,OCLFC,EAAe,CACjB7B,SAAU,GAAI8B,OAAQ,GAmBXC,MAhBf,WAAoD,IAA/BhC,EAA8B,uDAAtB8B,EAAcG,EAAQ,uCAC/C,MFRuB,gBEQnBA,EAAOvB,KACAwB,OAAOC,OAAO,GAAInC,EAAO,CAC5BC,SAAUD,EAAMC,SAASmC,OAAO,CAAE9B,MAAO2B,EAAOxB,QAASJ,GAAIL,EAAM+B,OAAS,IAC5EA,OAAQ/B,EAAM+B,OAAS,IFVL,mBEajBE,EAAOvB,KACLwB,OAAOC,OAAO,GAAInC,EAAO,CAC5BC,SAAU6B,EAAa7B,SACvB8B,OAAQD,EAAaC,SAGtB/B,GCfIqC,EAFDC,YAAYN,GCI1BO,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OAEJI,SAASC,eAAe,W","file":"static/js/main.bb0ffd92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { articles: state.articles };\r\n}\r\n\r\nconst ConnectedList = ({ articles }) => (\r\n    <ul>\r\n        {articles.map(el => (\r\n            <li key={el.id}>{el.id}, {el.title}</li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\n\r\nexport default List;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addArticle, resetArticles } from \"../actions/index\";\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//     return {\r\n//         addArticle: article => dispatch(addArticle(article))\r\n//     };\r\n// }\r\n\r\nconst mapDispatchToProps = {\r\n    addArticle, resetArticles\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { title } = this.state;\r\n        this.props.addArticle(title);\r\n        this.setState({ title: \"\" });\r\n    }\r\n\r\n    handleReset = (event) => {\r\n        event.preventDefault();\r\n        this.props.resetArticles();\r\n    }    \r\n\r\n    render() {\r\n        const { title } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        value={title}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Add article</button>&nbsp;\r\n                <button type=\"button\" onClick={this.handleReset}>Reset articles</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\r\n\r\nexport default Form;","import { ADD_ARTICLE, RESET_ARTICLES } from \"./action-types\";\r\n\r\nexport function addArticle(payload) {\r\n    return { type: ADD_ARTICLE, payload }\r\n}\r\n\r\nexport function resetArticles() {\r\n    return { type: RESET_ARTICLES }\r\n}","export const ADD_ARTICLE = \"ADD_ARTICLE\";\r\nexport const RESET_ARTICLES = \"RESET_ARTICLES\";","import React from \"react\";\r\nimport List from \"./List\";\r\nimport Form from \"./Form\";\r\n\r\nconst App = () => (\r\n    <div>\r\n        <h2>Articles</h2>\r\n        <Form/>\r\n        <List/>\r\n    </div>\r\n)\r\n\r\nexport default App;","import { ADD_ARTICLE } from \"../actions/action-types\";\r\nimport { RESET_ARTICLES } from \"../actions/action-types\"\r\n\r\nconst initialState = {\r\n    articles: [], lastId: 0\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    if (action.type === ADD_ARTICLE) {\r\n        return Object.assign({}, state, {\r\n            articles: state.articles.concat({ title: action.payload, id: state.lastId + 1 }),\r\n            lastId: state.lastId + 1\r\n        })\r\n    }\r\n    else if (action.type === RESET_ARTICLES) {\r\n        return Object.assign({}, state, {\r\n            articles: initialState.articles,\r\n            lastId: initialState.lastId\r\n        })\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport store from './store/index';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));"],"sourceRoot":""}